@page "/login"

@using QueueBreaker_UI.WASM.Models
@using QueueBreaker_UI.WASM.Contracts

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<br />
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div class="card">
            <br />
            <h3 class="card-title text-center">Login</h3>
            @if (!response)
            {
<ErrorMessage Message="Something went wrong with the login attempt" />}
            <div class="card-body">
                <EditForm Model="Model" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div>
                        <label for="email">Email Address</label>
                        <InputText Id="email" class="form-control" @bind-Value="Model.Email" />
                        <ValidationMessage For="@(() => Model.Email)" />
                    </div>
                    <div>
                        <label for="password">Password</label>
                        <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                        <ValidationMessage For="@(() => Model.Password)" />
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary btn-block">Login </button>
                    <button @onclick="Register" class="btn btn-info btn-block"> Register </button>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code { 
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private LoginModel Model = new LoginModel();
    private bool response = true;
    private async Task HandleLogin()
    {
        response = await _authRepo.Login(Model);

        if (response)
        {
            var user = (await authenticationStateTask).User;
            if (user.IsInRole("SuperAdmin"))
            {
                _navManager.NavigateTo("/dashboard");
            }
            else if (user.IsInRole("Admin"))
            {
                _navManager.NavigateTo("/dashboard");
            }
            else
            {
                _navManager.NavigateTo("/menu");
            }
        }

    }

    private void Register()
    {
        _navManager.NavigateTo("/UserRegister/");
    }

    }
