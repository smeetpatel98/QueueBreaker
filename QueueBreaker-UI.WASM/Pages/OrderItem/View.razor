@page "/OrderItem/view/{Id}"
@inject IOrderItemRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3 class="card-title">View OrderItem Details</h3>
<hr />
<br />
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading OrderItem Details" />
}
else
{
    <div class="col-md-4">
        <table class="table table-responsive">
            <tr>
                <td>@Model.Order.OrderItems</td>
            </tr>

        </table>
        <br />
        @if (Model.Order.OrderItems == null || Model.Order.OrderItems.Count < 1)
        {
    <div class="alert alert-dismissible alert-secondary">
        No OrderItem for this canteen
    </div>
        }
        else
        {
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <h4>Order Item</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var m in Model.Order.OrderItems)
                    {
                        <li class="list-group-item">@m.Order.OrderItems </li>
                    }
                </ul>
            </div>
        }

    </div>
}
<br />


<button @onclick="GoToEdit" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span>
    Edit OrderItem
</button>
<button @onclick="GoToDelete" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span>
    Delete OrderItem
</button>
<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private OrderItem Model = new OrderItem();

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.OrderItemEndpoint, id);
        _toastService.ShowInfo($"Now Viewing {Model.Order.OrderItems}", "");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/OrderItem/");
    }

    private void GoToEdit()
    {
        _navManager.NavigateTo($"/OrderItem/edit/{Model.Id}");
    }

    private void GoToDelete()
    {
        _navManager.NavigateTo($"/category/delete/{Model.Id}");
    }

}
